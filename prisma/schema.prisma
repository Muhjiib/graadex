// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  password String
  name     String
  role     Role   @default(STUDENT)
  
  student Student?
  teacher Teacher?
  createdAt DateTime @default(now())
}

model Student {
  id        String @id @default(cuid())
  userId    String @unique
  regNumber String @unique
  level     Int    @default(100)
  department String
  
  user      User @relation(fields: [userId], references: [id], onDelete: Cascade)
  results   Result[]
  createdAt DateTime @default(now())
}

model Teacher {
  id         String @id @default(cuid())
  userId     String @unique
  department String
  
  user    User @relation(fields: [userId], references: [id], onDelete: Cascade)
  results Result[]
  createdAt DateTime @default(now())
}

model Result {
  id         String @id @default(cuid())
  studentId  String
  teacherId  String
  course     String
  semester   Int
  year       Int
  score      Float
  grade      String
  units      Int    @default(3)
  
  student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)
  teacher   Teacher @relation(fields: [teacherId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  
  @@unique([studentId, course, semester, year])
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}